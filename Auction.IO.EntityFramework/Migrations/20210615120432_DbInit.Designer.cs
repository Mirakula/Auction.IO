// <auto-generated />
using System;
using Auction.IO.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Auction.IO.EntityFramework.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20210615120432_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Auction.IO.Domain.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<double>("LastBidPrice")
                        .HasColumnType("float");

                    b.Property<string>("LastBidder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            IsSold = false,
                            LastBidPrice = 132.99000000000001,
                            LastBidder = "Bidder 8",
                            Location = "Melburn, IRAN",
                            Name = "Test 1",
                            Price = 289.99000000000001
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            IsSold = false,
                            LastBidPrice = 149.09999999999999,
                            LastBidder = "Bidder 5",
                            Location = "Erimo, JAPAN",
                            Name = "Test 2",
                            Price = 129.99000000000001
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            IsSold = false,
                            LastBidPrice = 168.5,
                            LastBidder = "Bidder 6",
                            Location = "Pjongjang, NORTH KOREA",
                            Name = "Test 3",
                            Price = 150.0
                        });
                });

            modelBuilder.Entity("Auction.IO.Domain.Models.Role", b =>
                {
                    b.Property<int>("UserRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SystemRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRole");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            UserRole = 1,
                            SystemRole = "Administrator"
                        },
                        new
                        {
                            UserRole = 2,
                            SystemRole = "User"
                        });
                });

            modelBuilder.Entity("Auction.IO.Domain.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("ItemUserAccount", b =>
                {
                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("ItemsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ItemUserAccount");
                });

            modelBuilder.Entity("Auction.IO.Domain.Models.UserAccount", b =>
                {
                    b.HasOne("Auction.IO.Domain.Models.Role", "Role")
                        .WithOne("UserAccount")
                        .HasForeignKey("Auction.IO.Domain.Models.UserAccount", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ItemUserAccount", b =>
                {
                    b.HasOne("Auction.IO.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auction.IO.Domain.Models.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Auction.IO.Domain.Models.Role", b =>
                {
                    b.Navigation("UserAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
